from typing import List
class Solution:
    def numTriplets(self, nums1: List[int], nums2: List[int]) -> int:
        def twoProducts(num: int, nums2: List[int]):
            triplet, dict = 0, {}
            for a in nums2:
                if num % a == 0:
                    temp = num // a
                    if temp in dict:
                        triplet += dict[temp]
                if a not in dict:
                    dict[a] = 0
                dict[a] += 1
            return triplet

        def countTriplets(nums1: List[int], nums2: List[int]):
            triplet = 0
            for num in nums1:
                triplet += twoProducts(num*num, nums2)
            return triplet

        nums1.sort(), nums2.sort()
        m, n = len(nums1), len(nums2)        
        # print("{} {}\n{} {}".format(m, nums1, n, nums2))

        triplet = countTriplets(nums1, nums2) + countTriplets(nums2, nums1)
        return triplet


obj = Solution()
print(1, obj.numTriplets(nums1 = [7,4], nums2 = [5,2,8,9]))
print(9, obj.numTriplets(nums1 = [1,1], nums2 = [1,1,1]))
print(2, obj.numTriplets(nums1 = [7,7,8,3], nums2 = [1,2,9,7]))
print(0, obj.numTriplets(nums1 = [4,7,9,11,23], nums2 = [3,5,1024,12,18]))      
print(18529, obj.numTriplets(nums1 = [54,22,56,63,4,20,79,73,8,62,7,95,61,2,97,21,5,13,58,47,32,33,33,50,78,76,55,66,18,16,99,91,90,25,6,82,79,34,56,59,62,3,56,21,77,92,26,91,59,79,65,15,98,84,27,68,95,53,50,63,60,92,99,99,12,3,45,29,25,7,68,90,3,91,13,24,74,33,22,94,55,33,35,34,30,42,57,14,92,40,82,72,85,60,100,93,15,54,34,77,19,76,25,41,32,42,38,54,9,60,49,8,81,63,31,74,94,82,1,33,23,11,5,50,5,72,50,32,42,29,24,80,56,9,51,14,8,87,25,82,73,75,82,89,7,8,4,53,65,40,23,9,93,38,2,97,70,78,74,76,80,91,34,41,73,58,92,25,80,1,94,99,79,14,20,97,14,90,98,22,99,18,79,69,48,33,53,67,38,2,35,76,51,4,58,36,88,63,12,49,73,63,65,72,94,70,4,15,97,62,81,18,87,63,2,46,1,7,84,28,55,18,41,93,87,63,13,29,65,52,89,49,77,13,45,79,44,17,96,28,88,74,82,9,14,78,62,93,64,70,42,52,60,60,60,34,54,24,41,78,89,98,41,55,34,50,40,28,99,59,53,51,11,47,69,19,89,85,61,42,29,20,54,81,53,49,42,3,25,51,51,25,88,70,14,91,96,25,99,49,13,37,62,38,36,16,48,34,77,25,98,77,42,92,5,18,92,40,82,81,69,70,84,19,3,36,77,52,73,55,84,41,25,58,53,39,73,100,82,92,16,86,68,82,80,92,81,7,53,45,51,77,56,41,53,26,19,26,53,49,81,12,73,34,53,43,61,63,1,76,48,68,3,31,14,45,51,1802], nums2 = [11,56,89,80,56,78,36,39,6,35,70,25,96,1,84,2,53,44,89,24,19,27,6,29,32,62,77,73,35,21,75,95,8,72,99,2,79,93,56,21,88,84,43,79,61,22,84,86,15,20,82,47,70,4,28,19,16,94,88,64,37,33,58,83,74,35,4,55,95,83,66,92,68,30,27,28,54,54,92,72,8,2,39,2,80,64,72,77,72,25,88,35,13,86,5,57,69,62,97,47,70,33,71,35,68,16,9,88,33,37,96,61,70,48,33,25,84,45,55,40,57,17,57,50,79,25,64,44,64,59,18,62,18,61,50,46,57,14,37,6,85,38,68,44,20,95,61,67,16,86,57,25,81,24,8,42,74,94,68,97,24,30,1,52,55,29,17,48,66,54,19,2,96,44,66,69,66,45,87,74,67,33,53,1,97,14,99,35,99,27,53,37,30,42,76,3,60,31,67,55,84,70,9,68,33,62,75,45,56,20,86,70,21,84,30,63,6,34,66,8,8,92,93,72,19,81,42,49,98,52,71,16,90,80,35,29,45,66,27,57,82,95,86,5,96,49,53,82,20,49,91,22,8,53,20,44,11,25,70,41,46,16,41,58,78,25,63,16,44,58,10,48,53,44,40,9,6,39,80,77,96,100,8,5,31,53,13,80,22,88,12,7,54,50,13,52,68,27,84,5,36,61,62,70,48,47,3,39,36,79,76,91,92,60,81,46,89,74,85,21,49,2,9,2,31,47,79,99,30,2,85,6,92,46,19,68,7,29,35,52,93,77,37,73,36,54,90,87,29,75,60,64,4,7,6,60,26,52,26,24,45,81,16,41,82,62,96,6,93,24,22,68,80,21,37,74,64,5,26,3,45,58,20,81,41,91,39,97] ))